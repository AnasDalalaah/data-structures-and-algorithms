/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack&queue;

public class App {
    public String getGreeting() {
        return "Hello Everyone";
    }

    public static void main(String[] args) throws Exception {
        
      System.out.println(new App().getGreeting());

        Stack stack = new Stack();

        stack.push("A");
        stack.push("N");
        stack.push("A");
        stack.push("S");   

        
Queue queue= new Queue();
        queue.enqueue("A");
        queue.enqueue("N");
        queue.enqueue("A");
        queue.enqueue("S");

        System.out.println(queue);

        System.out.println(queue.dequeue());

        System.out.println(queue.peek());

        /* PseudoQueue queue1 = new PseudoQueue();

        queue1.enqueue("20");
        queue1.enqueue("1");
        queue1.enqueue("2");
        queue1.enqueue("3");
        queue1.enqueue("4");


        System.out.println(queue1.dequeue());*/

      
        //============================== Code challenge 12 =================================

        AnimalShelter shelter = new AnimalShelter();

        shelter.enqueue(new Cat("Bella"));
        shelter.enqueue(new Cat("Lucy"));
        shelter.enqueue(new Cat("Leo"));


        shelter.enqueue(new Dog("MILO"));
        shelter.enqueue(new Dog("AXEL"));
        shelter.enqueue(new Dog("BUDDY"));

        System.out.println(shelter);
        System.out.println(shelter.catQueue.peek().toString());

        shelter.dequeue("cat");
        System.out.println(shelter);

        shelter.dequeue("dog");
        System.out.println(shelter);  

    

     //  *********************** code challenge 12 ********************
        ValidateBrackets a = new ValidateBrackets();

        System.out.println(a.validateBrackets(")"));
        System.out.println(a.validateBrackets("{}{{}}"));

    }
}
